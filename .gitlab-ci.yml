stages:
  - prepare
  - linters
  - test
  - swagger
  - deploy

.cache-tpl: &cache-tpl
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - node_modules
    - frontend/components
  policy: pull

.test-template: &test-template
  image: node:10-stretch
  stage: test
  tags:
    - docker
  cache:
    <<: *cache-tpl
  variables:
      TZ: "America/New_York"
  before_script:
    - npm install -g grunt-cli
    - 'echo "INFO: NB node packages : $(ls node_modules | wc -l)"'
    - 'echo "INFO: NB bower packages : $(ls frontend/components | wc -l)"'
  except:
    variables:
      - $SKIP_TESTS
    refs:
      - tags@linagora/lgs/openpaas/linagora.esn.unifiedinbox.james

.test-template-svc: &test-template-svc
  <<: *test-template
  services:
    - name: elasticsearch:2.4
      alias: elasticsearch
    - name: mongo:3.2.0
      alias: mongo
    - name: redis:latest
      alias: redis
    - name: rabbitmq:3.6.5-management
      alias: rabbitmq
  variables:
    MONGO_HOST: mongo
    MONGO_PORT: 27017
    AMQP_HOST: rabbitmq
    AMQP_PORT: 5672
    ELASTICSEARCH_HOST : elasticsearch
    ELASTICSEARCH_PORT: 9200
    REDIS_HOST: redis
    REDIS_PORT: 6379

prepare:
  image: node:10-stretch
  stage: prepare
  tags:
    - docker
  cache:
    <<: *cache-tpl
    policy: pull-push
  script:
    - npm install
    - ./node_modules/.bin/bower install --allow-root
    - 'echo "INFO: NB node packages : $(ls node_modules | wc -l)"'
    - 'echo "INFO: NB bower packages : $(ls frontend/components | wc -l)"'
  except:
    variables:
      - $SKIP_PREPARE

linters:
  <<: *test-template
  stage: linters
  script:
    - grunt -v linters
  except:
    variables:
      - $SKIP_LINTERS
    refs:
      - tags@linagora/lgs/openpaas/linagora.esn.unifiedinbox.james

check_author:
  image: docker-registry.linagora.com:5000/lgs-releases/gitlab-integrity-checks:latest
  stage: linters
  variables:
    GIT_DEPTH: "1"
  tags:
    - docker-medium
    - check-author
  script:
    - check_author.py check "$GITLAB_USER_EMAIL" "$GITLAB_USER_NAME" --no-accents
  except:
    refs:
      - master@linagora/lgs/openpaas/linagora.esn.unifiedinbox.james
      - tags@linagora/lgs/openpaas/linagora.esn.unifiedinbox.james
      - /^release-.*/@linagora/lgs/openpaas/linagora.esn.unifiedinbox.james

####### tests without services requirements
frontend-test:
  <<: *test-template
  script:
    - grunt -v test-frontend

unit-backend-test:
  <<: *test-template
  script:
    - grunt -v --chunk=1 test-unit-backend

####### tests with services requirements
midway-backend-test:
  <<: *test-template-svc
  script:
    - grunt --chunk=1 -v test-midway-backend

swagger:
  <<: *test-template
  stage: swagger
  tags:
    - docker
  script:
    - grunt swagger-generate
  artifacts:
    paths:
      - ./doc/REST_API/swagger/james-swagger.json

deploy-swagger:
  stage: deploy
  tags:
    - deployment
    - api.open-paas.org
    - shell
  environment:
    name: api
    url: https://api.open-paas.org
  only:
    - master@linagora/lgs/openpaas/linagora.esn.james
  script:
    - perl -i -pe's/"host":"localhost:8080"/"schemes":["https"],"host":"demo.open-paas.org"/' ./doc/REST_API/swagger/james-swagger.json
    - cp ./doc/REST_API/swagger/james-swagger.json /var/www/html


deploy_dev:
  stage: deploy
  tags:
    - dev.open-paas.org
    - deployment
  environment:
    name: dev
    url: https://dev.open-paas.org
  only:
    - master@linagora/lgs/openpaas/linagora.esn.james
  script:
    - cd /srv/${CI_PROJECT_NAME}
    - git fetch --all
    - git checkout ${CI_COMMIT_SHA}
    - npm install --ignore-scripts --production
    - npm update --production
    - npm prune
    - bower install --production
    - bower prune
    - git checkout -- .
    - sudo /etc/init.d/rse.dev restart

trigger_esn_docker_build:
  stage: deploy
  script:
    - curl -s -X POST
      -F "token=${TRIGGER_ESN_BUILD_TOKEN}"
      -F "ref=master"
      https://ci.linagora.com/api/v4/projects/375/trigger/pipeline | jq .
  only:
    - master@linagora/lgs/openpaas/linagora.esn.james
